// Modest Modal 1.0.4
// Jonathan Halchak, www.jrhalchak.com, @onlinebhero
// License: MIT - do whatever you want
!function(o,t,e,a){o.modestmodal=o.modestmodal||function(t){function e(o){return o?{type:o.type||i.type,content:o.content||i.content,closeButton:o.closeButton||i.closeButton,openSelector:o.openSelector||i.openSelector,modalClass:o.modalClass||i.modalClass,transitionDuration:o.transitionDuration||i.transitionDuration,left:o.left||i.left,top:o.top||i.top,overlayBackground:o.overlayBackground||i.overlayBackground,position:o.position||i.position,disableEscape:"undefined"!=typeof o.disableEscape?o.disableEscape:i.disableEscape,uncloseable:"undefined"!=typeof o.uncloseable?o.uncloseable:i.uncloseable}:{}}function a(t,e){s.push({modal:t,overlay:e}),t.appendTo("body").css("display","block"),e.appendTo("body").css("visibility","visible"),setTimeout(function(){e.css("opacity",1).on("click",function(){o(this).hasClass("uncloseable")||o.modestmodal.close()}),t.css({opacity:1,top:"50%"}),t.trigger("mm.open")},300)}function n(t){o("body").off("click",t).on("click",t,function(){o.modestmodal.close()})}function l(){i=o.extend({},i,e(t)),o("body").on("click",i.openSelector,function(){var t=o(this),e={type:t.data("modestmodal-type")||i.type,content:t.data("modestmodal-content")||i.content,modalClass:t.data("modestmodal-modal-class")||i.modalClass,closeButton:t.data("modestmodal-close-selector")||i.closeButton,transitionDuration:t.data("modestmodal-transition-duration")||i.transitionDuration,left:t.data("modestmodal-left")||i.left,top:t.data("modestmodal-top")||i.top,overlayBackground:t.data("modestmodal-overlay-background")||i.overlayBackground,position:t.data("modestmodal-position")||i.position,disableEscape:"undefined"!=typeof t.attr("data-modestmodal-disable-escape")?!0:!1,uncloseable:"undefined"!=typeof t.attr("data-modestmodal-uncloseable")?!0:!1};e.closeButton!==i.closeButton&&n(e.closeButton),o.modestmodal.open(e)}).on("keyup",function(t){var e=s.length>0?s[s.length-1].overlay:null;27==t.which&&e&&!e.hasClass("disableEscape")&&o.modestmodal.close()})}var s=[],d=!1,i={$modal:o('<div class="modestmodal-modal" />'),$overlay:o('<div class="modestmodal-overlay" />'),closeButton:".modestmodal-close",openSelector:"[data-modestmodal]",type:null,content:"",modalClass:"",zIndex:99900,transitionDuration:"0.4s",transitionProperty:{"-webkit-transition":"all 0.4s ease","-moz-transition":"all 0.4s ease",transition:"all 0.4s ease;"},left:"50%",top:"60%",modalStyles:{display:"none","-webkit-transform":"translate(-50%, -50%)","-ms-transform":"translate(-50%, -50%)",transform:"translate(-50%, -50%)",opacity:0},overlayStyles:{visibility:"hidden",position:"fixed",top:0,bottom:0,left:0,right:0,opacity:0,width:"100%",height:"100%","background-color":"black"},overlayBackground:"rgba(0,0,0,0.3)",position:"fixed",uncloseable:!1,disableEscape:!1,ajaxCallback:null};o.modestmodal.open=function(t){var l=i.$overlay.clone(),d=s.length+1,c=o.extend({},i,e(t)),r="html"==c.type?o(c.content).data("doNotRemove",!0):i.$modal.clone(),m=c.overlayStyles;return c.type?(c.transitionDuration!==i.transitionDuration&&(c.transitionProperty={"-webkit-transition":"all "+c.transitionDuration+"ease","-moz-transition":"all "+c.transitionDuration+"ease",transition:"all "+c.transitionDuration+"ease"}),m.background=c.overlayBackground,l.attr("id","modestmodal-overlay-"+d).css(m).css(c.transitionProperty).css("z-index",d+c.zIndex),c.uncloseable&&l.addClass("uncloseable"),c.disableEscape&&l.addClass("disableEscape"),r.addClass(c.modalClass).attr("id","modestmodal-modal-"+d).css(c.modalStyles).css(c.transitionProperty).css("position",c.position).css({"z-index":d+c.zIndex+1,top:c.top,left:c.left}),r.trigger("mm.beforeOpen"),"content"==c.type||"html"==c.type?("content"==c.type&&r.html(c.content),a(r,l)):"ajax"==c.type&&o.get(c.content).then(function(o){r.html(o),a(r,l),"function"==typeof c.ajaxCallback&&c.ajaxCallback()}).fail(function(){console.log("modestmodal: Error with AJAX call.")}),void(c.closeButton!==i.closeButton&&n(t.closeButton))):!1},o.modestmodal.getOpenModals=function(){return s},o.modestmodal.close=function(t){var e;return s.length?(e=t&&t<s.length?s.splice(t,1)[0]:s.pop(),o(e.modal).trigger("mm.beforeClose",[e.modal,e.overlay]),e.modal.css("opacity",0),e.overlay.css("opacity",0),void setTimeout(function(){e.modal.hide(),e.overlay.hide(),o(e.modal).trigger("mm.close"),e.modal.data("doNotRemove")||e.modal.remove(),e.overlay.remove()},400)):!1},o.modestmodal.destroy=function(){o("[id^=modestmodal-],[class^=modestmodal-]").remove(),o.modestmodal.prototype.destroy.apply(this,arguments)},d?t&&(i=o.extend({},i,e(t))):(l(),d=!0)}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;base64,
