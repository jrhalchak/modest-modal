// Modest Modal 1.0.3
// Jonathan Halchak, www.jrhalchak.com, @onlinebhero
// License: MIT - do whatever you want
!function(o,t,e,a){var n=[],s=!1;o.modestmodal=o.modestmodal||function(t){function e(o){return o?{type:o.type||d.type,content:o.content||d.content,closeButton:o.closeButton||d.closeButton,openSelector:o.openSelector||d.openSelector,modalClass:o.modalClass||d.modalClass,transitionDuration:o.transitionDuration||d.transitionDuration,positionX:o.positionX||d.positionX,positionY:o.positionY||d.positionY,overlayBackground:o.overlayBackground||d.overlayBackground,disableEscape:"undefined"!=typeof o.disableEscape?o.disableEscape:d.disableEscape,uncloseable:"undefined"!=typeof o.uncloseable?o.uncloseable:d.uncloseable}:{}}function a(t,e){n.push({modal:t,overlay:e}),t.appendTo("body").css("display","block"),e.appendTo("body").css("visibility","visible"),setTimeout(function(){e.css("opacity",1).on("click",function(){o(this).hasClass("uncloseable")||o.modestmodal.close()}),t.css({opacity:1,top:"50%"}),t.trigger("mm.open")},300)}function l(t){o("body").on("click",t,function(){o.modestmodal.close()})}function i(){d=o.extend({},d,e(t)),l(d.closeButton),o("body").on("click",d.openSelector,function(){var t=o(this),e={type:t.data("modestmodal-type")||d.type,content:t.data("modestmodal-content")||d.content,modalClass:t.data("modestmodal-modal-class")||d.modalClass,closeButton:t.data("modestmodal-close-selector")||d.closeButton,transitionDuration:t.data("modestmodal-transition-duration")||d.transitionDuration,positionX:t.data("modestmodal-position-x")||d.positionX,positionY:t.data("modestmodal-position-y")||d.positionY,overlayBackground:t.data("modestmodal-overlay-background")||d.overlayBackground,disableEscape:"undefined"!=typeof t.attr("data-modestmodal-disable-escape")?!0:!1,uncloseable:"undefined"!=typeof t.attr("data-modestmodal-uncloseable")?!0:!1};e.closeButton!==d.closeButton&&l(e.closeButton),o.modestmodal.open(e)}).on("keyup",function(t){var e=n.length>0?n[n.length-1].overlay:null;27==t.which&&e&&!e.hasClass("disableEscape")&&o.modestmodal.close()})}var d={$modal:o('<div class="modestmodal-modal" />'),$overlay:o('<div class="modestmodal-overlay" />'),closeButton:".modestmodal-close",openSelector:"[data-modestmodal]",type:null,content:"",modalClass:"",zIndex:99900,transitionDuration:"0.4s",transitionProperty:{"-webkit-transition":"all 0.4s ease","-moz-transition":"all 0.4s ease",transition:"all 0.4s ease;"},positionX:"50%",positionY:"60%",modalStyles:{display:"none",position:"fixed","-webkit-transform":"translate(-50%, -50%)","-ms-transform":"translate(-50%, -50%)",transform:"translate(-50%, -50%)",opacity:0},overlayStyles:{visibility:"hidden",position:"fixed",top:0,bottom:0,left:0,right:0,opacity:0,width:"100%",height:"100%","background-color":"black"},overlayBackground:"rgba(0,0,0,0.3)",uncloseable:!1,disableEscape:!1,ajaxCallback:null};o.modestmodal.open=function(t){var s=d.$overlay.clone(),l=n.length+1,i=o.extend({},d,e(t)),r="html"==i.type?o(i.content).data("doNotRemove",!0):d.$modal.clone(),c=i.overlayStyles;return i.type?(i.transitionDuration!==d.transitionDuration&&(i.transitionProperty={"-webkit-transition":"all "+i.transitionDuration+"ease","-moz-transition":"all "+i.transitionDuration+"ease",transition:"all "+i.transitionDuration+"ease"}),c.background=i.overlayBackground,s.attr("id","modestmodal-overlay-"+l).css(c).css(i.transitionProperty).css("z-index",l+i.zIndex),i.uncloseable&&s.addClass("uncloseable"),i.disableEscape&&s.addClass("disableEscape"),r.addClass(i.modalClass).attr("id","modestmodal-modal-"+l).css(i.modalStyles).css(i.transitionProperty).css({"z-index":l+i.zIndex+1,top:i.positionY,left:i.positionX}),r.trigger("mm.beforeOpen"),void("content"==i.type||"html"==i.type?("content"==i.type&&r.html(i.content),a(r,s)):"ajax"==i.type&&o.get(i.content).then(function(o){r.html(o),a(r,s),"function"==typeof i.ajaxCallback&&i.ajaxCallback()}).error(function(){console.log("modestmodal: Error with AJAX call.")}))):!1},o.modestmodal.getOpenModals=function(){return n},o.modestmodal.close=function(t){var e=t&&t<n.length?n.splice(t,1)[0]:n.pop();o(e.modal).trigger("mm.beforeClose",[e.modal,e.overlay]),e.modal.css("opacity",0),e.overlay.css("opacity",0),setTimeout(function(){o(e.modal).trigger("mm.close"),e.modal.data("doNotRemove")||e.modal.remove(),e.overlay.remove()},400)},o.modestmodal.destroy=function(){o("[id^=modestmodal-],[class^=modestmodal-]").remove(),o.modestmodal.prototype.destroy.apply(this,arguments)},s?t&&(d=o.extend({},d,e(t))):(i(),s=!0)}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;base64,